@tailwind base;

@tailwind components;

@tailwind utilities;

@layer base {
    html {
        scroll-behavior: smooth;
    }

    body {
        @apply text-gray-50;
        @apply font-normal;
        @apply bg-gray-800;
        @apply text-base;
    }

    select {
        background-image: linear-gradient(45deg, transparent 50%, theme('colors.gray.50') 50%),
            linear-gradient(135deg, theme('colors.gray.50') 50%, transparent 50%);
        background-position: calc(100% - 20px) calc(1em + 2px), calc(100% - 15px) calc(1em + 2px);
        background-size: 5px 5px, 5px 5px;
        background-repeat: no-repeat;
    }

    /* Style the resizer thumb of textarea*/
    textarea::-webkit-resizer {
        background-image: url('assets/resize-thumb.svg');
        background-size: cover;
        background-position: center;
    }

    input:disabled,
    input:disabled + label {
        @apply cursor-not-allowed text-gray-400;
    }

    input[type='radio'] {
        @apply mr-1.5;
    }

    :focus-visible {
        outline-width: 1px;
        outline-style: solid;
        outline-color: theme('colors.gray.50');
    }
}

@layer components {
    .btn-primary {
        @apply flex
            items-center
            justify-center
            rounded-full
            bg-green-500
            hover:cursor-pointer
            md:hover:bg-green-400
            active:bg-green-400;
    }

    .btn-primary.danger {
        @apply bg-red-500
            md:hover:bg-red-400
            active:bg-red-400;
    }

    .btn-secondary {
        @apply flex
            items-center
            justify-center
            rounded-full
            ring-inset
            ring-2
            ring-gray-50
            hover:cursor-pointer
            md:hover:text-green-500
            md:hover:ring-green-500
            active:text-green-500
            active:ring-green-500;
    }

    .btn-tertiary {
        @apply flex
            items-center
            justify-center
            rounded-full
            ring-inset
            ring-2;
    }

    .btn-secondary.muted {
        @apply ring-gray-300
            text-gray-300
            md:hover:text-gray-50
            md:hover:ring-gray-50
            active:text-gray-50
            active:ring-gray-50;
    }

    .btn-secondary.success {
        @apply ring-green-500
            text-green-500
            md:hover:text-green-400
            md:hover:ring-green-400
            active:text-green-400
            active:ring-green-400;
    }

    .btn-secondary.danger {
        @apply md:hover:text-red-500
            md:hover:ring-red-500
            active:text-red-500
            active:ring-red-500;
    }

    .btn-primary.disabled {
        @apply cursor-not-allowed bg-gray-700 text-gray-400;
    }

    .text-input {
        @apply px-2 appearance-none bg-gray-900 focus:outline-none;
    }
}

.pixelated {
    image-rendering: pixelated;
}

/* remove default blue highlight that tailwind sets*/
* {
    -webkit-tap-highlight-color: transparent;
}

:root {
    --container-margin: calc(0.5 * (100% - var(--inner-container-size)));
}

@screen xs {
    /**
     * Taking the min of 100% and the breakpoint size accounts for the scrollbar
     * if the scrollbar is present then the available width of the container may be less than 
     * the breakpoint size, should this occur, the width of the container will be 100%
     */
    :root {
        --inner-container-size: calc(min(theme('screens.xs'), 100%) - 2 * theme('container.padding.DEFAULT'));
    }
}
@screen sm {
    :root {
        --inner-container-size: calc(min(theme('screens.sm'), 100%) - 2 * theme('container.padding.sm'));
    }
}
@screen md {
    :root {
        --inner-container-size: calc(min(theme('screens.md'), 100%) - 2 * theme('container.padding.md'));
    }
}
@screen lg {
    :root {
        --inner-container-size: calc(min(theme('screens.lg'), 100%) - 2 * theme('container.padding.lg'));
    }
}
@screen xl {
    :root {
        --inner-container-size: calc(min(theme('screens.xl'), 100%) - 2 * theme('container.padding.xl'));
    }
}
@screen 2xl {
    :root {
        --inner-container-size: calc(min(theme('screens.2xl'), 100%) - 2 * theme('container.padding.2xl'));
    }
}
